name: Reopened issues get Monday blurb

on:
  issues:
    types: [reopened]

env:
  QUERY: |
    {
      items_by_column_values(board_id: ${{ secrets.MONDAY_BOARD }},
                             column_id: "name",
                             column_value: "${{ github.event.issue.title }}") {
        id
        creator { name }
        column_values(ids: [github_issue, assignee7]) { title value text }
        updates(limit: 1) { text_body body }
      }
    }

jobs:
  reopened-issues-monday-blurb:
    runs-on: ubuntu-latest
    steps:
      - id: query
        run: echo "::set-output name=query::$(echo $QUERY | sed -e 's/\"/\\\"/g')"
      - id: response
        uses: satak/webrequest-action@master
        with:
          url: https://api.monday.com/v2
          method: POST
          headers: '{"Content-Type": "application/json", "Authorization": "${{ secrets.MONDAY_TOKEN }}"}'
          payload: '{"query": "${{ steps.query.outputs.query }}"}'

      - id: parse
        run: |
          echo "::set-output name=item_number::$(echo '${{ steps.response.outputs.output }}' | jq '.data.data.items_by_column_values[0].id')"
          echo "::set-output name=item_author::$(echo '${{ steps.response.outputs.output }}' | jq '.data.data.items_by_column_values[0].creator.name')"
        # echo '::set-output name=github_data::$(jq ".data.items_by_column_values[0].column_values | .[] | select(.title==\"GitHub Issue\")" data/item.json )'
        # echo '::set-output name=assigned_to::$(jq ".data.items_by_column_values[0].column_values | .[] | select(.title==\"Assigned To\").text" data/item.json })'

      - id: format
        run: |
          echo "::set-output name=head::$(echo $template | sed -e 's/\n/ /g')"
          echo "::set-output name=body::$(echo $textbody | sed -e 's/\n/ /g' | sed -e 's/\"/\\\"/g' | sed -e 's/<img[^>]*>//g')"
          echo "::set-output name=link::$(echo ${{ steps.parse.outputs.item_author }} | sed -e 's/ /%20/g')"
        env:
          template: |
            <p align=\"right\"><kbd align=\"left\"><b>Author </b><br/><a
            href=\"https://avochato.monday.com/boards/${{ secrets.MONDAY_BOARD }}?term=${{ steps.format.outputs.link }}\">${{ steps.parse.outputs.item_author }}</a></kbd> <kbd
            align=\"left\"><a href=\"https://avochato.monday.com/boards/${{ secrets.MONDAY_BOARD }}/pulses/${{ steps.item_number.outputs.value }}\"><img
            align=\"right\" src=\"https://assets.avochato.com/assets/icons/monday.png\">Monday<br/> Item</a></kbd></p>
          textbody: |
            ${{ fromJson(steps.response.outputs.output).data.data.items_by_column_values[0].updates[0].body }}

    # - id: slurp
    #   run: |
    #     echo "::set-output name=data::$(cat fetch-api-data-action/data.json)"
    # - id: comment
    #   uses: peter-evans/create-or-update-comment@v1
    #   with:
    #     issue-number: ${{ github.event.issue.number }}
    #     body: ${{ steps.slurp.outputs.data }}

      - if : ${{ true }}
        uses: satak/webrequest-action@master
        with:
          url: ${{ github.event.issue.url }}
          method: PATCH
          headers: '{"Accept": "application/vnd.github.v3+json", "Authorization": "Bearer ${{ secrets.AUTOMATION_TOKEN }}"}'
          payload: '{"body": "${{ steps.format.outputs.head }}\n\n${{ steps.format.outputs.body }}"}'

      - if : ${{ false }}
        uses: satak/webrequest-action@master
        with:
          url: ${{ github.event.issue.url }}
          method: PATCH
          headers: '{"Accept": "application/vnd.github.v3+json", "Authorization": "Bearer ${{ secrets.AUTOMATION_TOKEN }}"}'
          payload: '{"body": "Duplicate Issue.", "state": "closed"}'
